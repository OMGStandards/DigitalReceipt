TransactionItem:
  description: |
    Item within Transaction.
  type: object
  properties:
    lookupCode:
      description: |
        The identifier that was used to retrieve the item information.
        This is the value provided by the user to find the item.
      $ref: "#/ItemLookupCode"
    alternativeLookupCodes:
      description: |
        Alternative lookup codes for the item.
        These can be provided to supplement the lookupCode, when a lookup
        code of a particular type is required, but was not used to look-up the item.
      $ref: "#/LookupCodeCollection"
    itemNumber:
      description: |
        A unique retailer identifier for the Item.
        It is also often referred to as SKU (Stock Keeping Unit).
        Item numbers are assigned to both physical items and services.
      type: string
    itemID:
      description: |
        A globally unique identifier for the Item.
        It could be represented by UUID.
      type: string
    alternativeItemID:
      description: |
        A alternative unique identifier for the Item.
        It could be an item identifier in a third party system.
      type: string
    description:
      description: |
        A description of the Item.
      type: string
    shortDescription:
      description: |
        A short description of the Item.
      type: string
    nonMerchandiseFlag:
      description: |
        A flag that indicates that item is a non-merchandise item.
      type: boolean
      default: false
    merchandiseHierarchy:
      description: |
        Merchandise hierarchy information for the Item.
      $ref: "#/MerchandiseHierarchy"
    typeCode:
      description: |
        A code that indicates type of the Item.
      $ref: "#/ItemTypeEnum"
    serialNumber:
      description: |
        Alphanumeric code that identifies the Item.
      type: string
    unitCost:
      description: |
        The unit cost of the Item at the time of the Transaction
      $ref: "common.yaml#/MonetaryAmount"
    regularUnitPrice:
      description: |
        The regular or lookup per-unit price for the item.
        This is the price before any discounts have been applied. This unit
        price is typically the result of item lookup but can also be
        override unit price.
      $ref: "common.yaml#/MonetaryAmount"
    unitListPrice:
      description: |
        The unit MSRP of the Item at the time of the Transaction
      $ref: "common.yaml#/MonetaryAmount"
    compareUnitPrice:
      description: |
        The price to report to the customer for comparision.
      $ref: "common.yaml#/MonetaryAmount"
    actualUnitPrice:
      description: |
        The actual amount paid by a customer per unit.
        This amount can be rounded if Line Item contains multiple units sold.
      $ref: "common.yaml#/MonetaryAmount"
    countableQuantity:
      description: |
        Count of items that are part of this Line Item.
      type: integer
      format: int32
    measuredQuantity:
      description: |
        Quantity expressed in units of measure.
      $ref: "common.yaml#/MeasuredQuantity"
    extendedNetAmount:
      description: |
        The actual amount paid by a customer for the whole line item.
        This is final amount after applying all price derivation rules.
      $ref: "common.yaml#/MonetaryAmount"
    extendedDiscountAmount:
      description: |
        The total discount applied to this Line Item.
      $ref: "common.yaml#/MonetaryAmount"
    extendedTaxAmount:
      description: |
        The total tax applied to this Line Item.
      $ref: "common.yaml#/MonetaryAmount"
    taxGroupID:
      description: |
        The unique identifier for Item tax group.
      type: string
    taxes:
      description: |
        Collection of taxes associated with this Line Item.
      $ref: "tax.yaml#/TaxCollection"
    amountModifiers:
      description: |
        Collection of amount modifiers such applied to the Line Item.
        This collection contains all discounts and markdowns.
      $ref: "amountmodifier.yaml#/AmountModifierCollection"
    priceOverride:
      description: |
        Manual adjustment of the regular unit price.
        This process is used if item lookup fails or item price is incorrect.
      $ref: "amountmodifier.yaml#/PriceOverride"
    manuallyEnteredPriceFlag:
      description: |
        Flag that indicates that item price was entered manually.
        This is different from price override where price read from PLU
        had to be updated. This flag is set when price is entered manually
        as a part of normal business process.
      type: boolean
      default: false
    notOnFileFlag:
      description: |
        Flag that indicates that item lookup failed.
      type: boolean
      default: false
    giftReceiptFlag:
      description: |
        A flag denoting that this line item was part of gift receipt.
      type: boolean
      default: false
    tenderItem:
      description: |
        If item represents a tender it might require additional information
        potentially including authorization and activation.
      $ref: "transaction-tender.yaml#/TransactionTender"
    salespeople:
      description: |
        Salespeople associated with Line Item
      $ref: "associate.yaml#/SalespersonCollection"
    relatedCustomerOrder:
      description: |
        Customer order related to this transaction item.
      $ref: "customer-order.yaml#/CustomerOrderLink"
    itemGroups:
      description: |
        Groups that item is associated with.
      $ref: "#/ItemGroupCollection"
    consignmentFlag:
      description: |
        A flag that indicates that item is a consignment item.
      type: boolean
      default: false
    consignment:
      description: |
        Additional information captured for consignment items.
      $ref: "consignment.yaml#/Consignment"
    extensibilityData:
      description: |
        Data that provides extensibility to the defined data structure.
        This property is an array of DataSets where each DataSet is a
        named collection of name-value pairs.
      $ref: "common.yaml#/ExtensibilityData"
  required:
    - lookupCode
    - countableQuantity
    - extendedNetAmount
  additionalProperties: false

ItemLookupCode:
  description: |
    An item lookup code is an identifier that can be used to retrieve the item information.
    Often lookup codes are represented using a barcode either printed on
    the item or its package or affixed to the item as a sticker or a tag.
    Most commonly item lookup codes are used at POS checkout but they
    can also be used by other retail applications. There are standard
    item idendifiers such as GTIN, but retailers may develop and maintain
    their own set of item lookup codes. An item can have multiple
    lookup codes.
  type: object
  properties:
    value:
      description: |
        The value of the code used to lookup an item.
      type: string
    type:
      description: |
        The type of the lookup code.
      $ref: "#/LookupCodeTypeEnum"
    rawLookupCodeType:
      description: |
        The type of the lookup code that came from input system
        before it was mapped to well known lookup type value.
      type: string
  required:
    - value
  additionalProperties: false

ItemTypeEnum:
  description: |
    Type of item used in the transaction.
    Stock - tangible item (typically merchandise) that can be stocked by the retailer.
    Service - intangible non-merchandise items that represents services, sold by retailer.
      For example, alterations, furnuture treatment, warranties, etc.
    Digital - non-merchandise intagible items that are stored and delivered in electronic format.
      For example, eBooks, music, etc.
    Liability - non-merchandise items sales of which represent retailer's liabilities.
      Sale of such items if booked as liability rather than revenue.
      For example, gift cards, gift vouchers, etc.
  type: string
  enum:
    - Stock
    - Service
    - Digital
    - Liability
    - Unknown

LookupCodeTypeEnum:
  description: |
    A type of code that was used to lookup items.
    There are several types of lookup codes used by retailers.
    Retailers can use standard lookup codes like GTIN (Global Trade
    Identifier). They can also use SKU number to lookup the item or
    even define their own lookup codes. Below is the list of well-known
    identifiers.
    SKU - Stock Keeping Unit, typically itemNumber.
    PLU - Price Lookup Code, typically short 4-5 digit code used for produce.
    GTIN8 - 8-digit GS1 GTIN-8 (EAN-8, JAN-8)
    GTIN12 - 12-digit GS1 GTIN-12 (UPC-12, UCC-12, UPC-A)
    GTIN13 - 13-digit GS1 GTIN-13 (EAN-13, JAN-13, ISBN-13)
    GTIN14 - 14-digit GS1 GTIN-14 (ITF-14, UCC-14)
    GTIN - Generic  GTIN
    UPC - Generic UPC
    EAN - Generic EAN
    JAN - Generic JAN
    ISBN - Generic ISBN
    Custom - Custom Item lookup code
    Unknown - Unknown type of lookup code
  type: string
  enum:
    - SKU
    - PLU
    - GTIN8
    - GTIN12
    - GTIN13
    - GTIN14
    - GTIN
    - UPC
    - EAN
    - JAN
    - ISBN
    - Custom
    - Unknown

LookupCodeCollection:
  description: |
    Collection of item lookup codes.
  type: array
  items:
    $ref: "#/ItemLookupCode"

MerchandiseHierarchy:
  description: |
    Collection of nodes that can be used to form merchandise hierarchy.
    Nodes belong to one of the well-known merchandise hierarchy levels
    defined by HierarchyLevelsEnum. This structure does not capture
    actual merchandise hierarchy. If a node belongs to one of the well-known
    merchandise hierarchy levels it is captured here but it may or
    may not be a node of the actual merchandise hierarchy used by a
    particular retailer.
  type: array
  items:
    $ref: "#/MerchandiseHierarchyNode"

MerchandiseHierarchyNode:
  description: |
    Node that belongs to one of the well-known merchandise hierarchy levels.
    These levels are defined by HierarchyLevelsEnum.
    It is important to note that just because the node belongs to merchandise
    hierarchy level does not mean that it will be a part of merchandise
    hierarchy used by a particular customer. Merchandise hierarchy is not
    defined inside retail transaction. Only nodes that potentially can be used
    to form merchandise hierarchy are captured.
  type: object
  properties:
    level:
      description: |
        The level of merchandise hierarchy to which the node belongs.
      $ref: "#/HierarchyLevelEnum"
    customLevel:
      description: |
        Custom level of merchandise hierarchy.
        This property can only be defined if level is set to Custom.
      type: string
    nodeID:
      description: |
        The identifier of the hierarchy node.
      type: string
    nodeName:
      description: |
        Name of the hierarchy node.
      type: string
    nodeDescription:
      description: |
        Description of the hierarchy node.
      type: string
    nodeNumber:
      description: |
        Meaningful numeric identifier for hierarchy node.
        For example, it could be numeric department number.
      type: integer
      format: int32
    nodeCode:
      description: |
        Meaningful alphanumeric identifier for hierarchy node.
        For example, it could be code like B25.
      type: string
  required:
    - level
  additionalProperties: false

HierarchyLevelEnum: 
  description: |
    List of well-known Levels of merchandise hierarchy.
  type: string
  enum:
    - Division
    - DepartmentGroup
    - Department
    - SubDepartment
    - Category
    - SubCategory
    - Class
    - SubClass
    - Style
    - Custom

ItemGroup:
  description: |
    A collection of items that are grouped together for a certain purpose.
    For example, items can be grouped to participate in promotions or for
    reporting.
  type: object
  properties:
    itemGroupID:
      description: |
        A unique identifier for the Item Group.
      type: string
    itemGroupType:
      description: |
        A type of the Item Group.
      type: string
    itemGroupName:
      description: |
        Name of the Item Group.
      type: string
  required:
    - itemGroupID
  additionalProperties: false

ItemGroupCollection:
  description: |
    A collection of item groups.
  type: array
  items:
    $ref: "#/ItemGroup"
